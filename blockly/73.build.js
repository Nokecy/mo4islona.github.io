(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{75:function(module,exports){eval('var Blockly = {}; Blockly.Msg={};  module.exports = function(){ // This file was automatically generated.  Do not modify.\n\n\'use strict\';\n\n\n\n\n\nBlockly.Msg["ADD_COMMENT"] = "QInHom chel";\nBlockly.Msg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Can\'t delete the variable \'%1\' because it\'s part of the definition of the function \'%2\'";  // untranslated\nBlockly.Msg["CHANGE_VALUE_TITLE"] = "choH:";\nBlockly.Msg["CLEAN_UP"] = "ngoghmeyvaD tlhegh rurmoH";\nBlockly.Msg["COLLAPSE_ALL"] = "ngoghmey DejmoH";\nBlockly.Msg["COLLAPSE_BLOCK"] = "ngogh DejmoH";\nBlockly.Msg["COLOUR_BLEND_COLOUR1"] = "rItlh wa\'";\nBlockly.Msg["COLOUR_BLEND_COLOUR2"] = "rItlh cha\'";\nBlockly.Msg["COLOUR_BLEND_HELPURL"] = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated\nBlockly.Msg["COLOUR_BLEND_RATIO"] = "\'ar";\nBlockly.Msg["COLOUR_BLEND_TITLE"] = "DuD";\nBlockly.Msg["COLOUR_BLEND_TOOLTIP"] = "Blends two colours together with a given ratio (0.0 - 1.0).";  // untranslated\nBlockly.Msg["COLOUR_PICKER_HELPURL"] = "https://en.wikipedia.org/wiki/Color";  // untranslated\nBlockly.Msg["COLOUR_PICKER_TOOLTIP"] = "Choose a colour from the palette.";  // untranslated\nBlockly.Msg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated\nBlockly.Msg["COLOUR_RANDOM_TITLE"] = "rItlh vISaHbe\'";\nBlockly.Msg["COLOUR_RANDOM_TOOLTIP"] = "Choose a colour at random.";  // untranslated\nBlockly.Msg["COLOUR_RGB_BLUE"] = "chal rItlh";\nBlockly.Msg["COLOUR_RGB_GREEN"] = "tI rItlh";\nBlockly.Msg["COLOUR_RGB_HELPURL"] = "http://www.december.com/html/spec/colorper.html";  // untranslated\nBlockly.Msg["COLOUR_RGB_RED"] = "\'Iw rItlh";\nBlockly.Msg["COLOUR_RGB_TITLE"] = "rItlh wIv";\nBlockly.Msg["COLOUR_RGB_TOOLTIP"] = "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.";  // untranslated\nBlockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated\nBlockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "gho Haw\'";\nBlockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "gho taHqa\'";\nBlockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Break out of the containing loop.";  // untranslated\nBlockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Skip the rest of this loop, and continue with the next iteration.";  // untranslated\nBlockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "yIqIm! ghoDaq neH ngoghvam lo\'laH vay\'.";\nBlockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated\nBlockly.Msg["CONTROLS_FOREACH_TITLE"] = "ngIq Doch %1 ngaSbogh tetlh %2 nuDDI\'";\nBlockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "For each item in a list, set the variable \'%1\' to the item, and then do some statements.";  // untranslated\nBlockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated\nBlockly.Msg["CONTROLS_FOR_TITLE"] = "togh %1 mung %2 ghoch %3 Do %4";\nBlockly.Msg["CONTROLS_FOR_TOOLTIP"] = "Have the variable \'%1\' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.";  // untranslated\nBlockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Add a condition to the if block.";  // untranslated\nBlockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "Add a final, catch-all condition to the if block.";  // untranslated\nBlockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated\nBlockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this if block.";  // untranslated\nBlockly.Msg["CONTROLS_IF_MSG_ELSE"] = "pagh";\nBlockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "pagh teHchugh";\nBlockly.Msg["CONTROLS_IF_MSG_IF"] = "teHchugh";\nBlockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "If a value is true, then do some statements.";  // untranslated\nBlockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.";  // untranslated\nBlockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";  // untranslated\nBlockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";  // untranslated\nBlockly.Msg["CONTROLS_REPEAT_HELPURL"] = "https://en.wikipedia.org/wiki/For_loop";  // untranslated\nBlockly.Msg["CONTROLS_REPEAT_INPUT_DO"] = "ruch";\nBlockly.Msg["CONTROLS_REPEAT_TITLE"] = "%1-logh qaSmoH";\nBlockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "Do some statements several times.";  // untranslated\nBlockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated\nBlockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "teHpa\' qaSmoH";\nBlockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "teHtaHvIS qaSmoH";\nBlockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "While a value is false, then do some statements.";  // untranslated\nBlockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "While a value is true, then do some statements.";  // untranslated\nBlockly.Msg["DELETE_ALL_BLOCKS"] = "Hoch %1 ngoghmey Qaw\'?";\nBlockly.Msg["DELETE_BLOCK"] = "ngogh Qaw\'";\nBlockly.Msg["DELETE_VARIABLE"] = "Delete the \'%1\' variable";  // untranslated\nBlockly.Msg["DELETE_VARIABLE_CONFIRMATION"] = "Delete %1 uses of the \'%2\' variable?";  // untranslated\nBlockly.Msg["DELETE_X_BLOCKS"] = "%1 ngoghmey Qaw\'";\nBlockly.Msg["DISABLE_BLOCK"] = "ngogh Qotlh";\nBlockly.Msg["DUPLICATE_BLOCK"] = "velqa\' chenmoH";\nBlockly.Msg["DUPLICATE_COMMENT"] = "Duplicate Comment";  // untranslated\nBlockly.Msg["ENABLE_BLOCK"] = "ngogh QotlhHa\'";\nBlockly.Msg["EXPAND_ALL"] = "ngoghmey DejHa\'moH";\nBlockly.Msg["EXPAND_BLOCK"] = "ngogh DejHa\'moH";\nBlockly.Msg["EXTERNAL_INPUTS"] = "Hur rar";\nBlockly.Msg["HELP"] = "QaH";\nBlockly.Msg["INLINE_INPUTS"] = "qoD rar";\nBlockly.Msg["IOS_CANCEL"] = "Cancel";  // untranslated\nBlockly.Msg["IOS_ERROR"] = "Error";  // untranslated\nBlockly.Msg["IOS_OK"] = "OK";  // untranslated\nBlockly.Msg["IOS_PROCEDURES_ADD_INPUT"] = "+ Add Input";  // untranslated\nBlockly.Msg["IOS_PROCEDURES_ALLOW_STATEMENTS"] = "Allow statements";  // untranslated\nBlockly.Msg["IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR"] = "This function has duplicate inputs.";  // untranslated\nBlockly.Msg["IOS_PROCEDURES_INPUTS"] = "INPUTS";  // untranslated\nBlockly.Msg["IOS_VARIABLES_ADD_BUTTON"] = "Add";  // untranslated\nBlockly.Msg["IOS_VARIABLES_ADD_VARIABLE"] = "+ Add Variable";  // untranslated\nBlockly.Msg["IOS_VARIABLES_DELETE_BUTTON"] = "Delete";  // untranslated\nBlockly.Msg["IOS_VARIABLES_EMPTY_NAME_ERROR"] = "You can\'t use an empty variable name.";  // untranslated\nBlockly.Msg["IOS_VARIABLES_RENAME_BUTTON"] = "Rename";  // untranslated\nBlockly.Msg["IOS_VARIABLES_VARIABLE_NAME"] = "Variable name";  // untranslated\nBlockly.Msg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated\nBlockly.Msg["LISTS_CREATE_EMPTY_TITLE"] = "tetlh chIm";\nBlockly.Msg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Returns a list, of length 0, containing no data records";  // untranslated\nBlockly.Msg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "tetlh";\nBlockly.Msg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this list block.";  // untranslated\nBlockly.Msg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated\nBlockly.Msg["LISTS_CREATE_WITH_INPUT_WITH"] = "tetlh ghom";\nBlockly.Msg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Add an item to the list.";  // untranslated\nBlockly.Msg["LISTS_CREATE_WITH_TOOLTIP"] = "Create a list with any number of items.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_FIRST"] = "wa\'DIch";\nBlockly.Msg["LISTS_GET_INDEX_FROM_END"] = "# Qav";\nBlockly.Msg["LISTS_GET_INDEX_FROM_START"] = "#";\nBlockly.Msg["LISTS_GET_INDEX_GET"] = "Suq";\nBlockly.Msg["LISTS_GET_INDEX_GET_REMOVE"] = "Suq vaj pej";\nBlockly.Msg["LISTS_GET_INDEX_LAST"] = "Qav";\nBlockly.Msg["LISTS_GET_INDEX_RANDOM"] = "Sahbe\'";\nBlockly.Msg["LISTS_GET_INDEX_REMOVE"] = "pej";\nBlockly.Msg["LISTS_GET_INDEX_TAIL"] = "";\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Returns the first item in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Returns the item at the specified position in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Returns the last item in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Returns a random item in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Removes and returns the first item in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Removes and returns the item at the specified position in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Removes and returns the last item in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Removes and returns a random item in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Removes the first item in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Removes the item at the specified position in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Removes the last item in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Removes a random item in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_SUBLIST_END_FROM_END"] = "mojaQ # Qav";\nBlockly.Msg["LISTS_GET_SUBLIST_END_FROM_START"] = "mojaQ #";\nBlockly.Msg["LISTS_GET_SUBLIST_END_LAST"] = "mojaQ Qav";\nBlockly.Msg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated\nBlockly.Msg["LISTS_GET_SUBLIST_START_FIRST"] = "tetlhHom moHaq wa\'DIch";\nBlockly.Msg["LISTS_GET_SUBLIST_START_FROM_END"] = "tetlhHom moHaq # Qav";\nBlockly.Msg["LISTS_GET_SUBLIST_START_FROM_START"] = "tetlhHom moHaq #";\nBlockly.Msg["LISTS_GET_SUBLIST_TAIL"] = "Suq";\nBlockly.Msg["LISTS_GET_SUBLIST_TOOLTIP"] = "Creates a copy of the specified portion of a list.";  // untranslated\nBlockly.Msg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 is the last item.";  // untranslated\nBlockly.Msg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 is the first item.";  // untranslated\nBlockly.Msg["LISTS_INDEX_OF_FIRST"] = "Doch sam wa\'DIch";\nBlockly.Msg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated\nBlockly.Msg["LISTS_INDEX_OF_LAST"] = "Doch sam Qav";\nBlockly.Msg["LISTS_INDEX_OF_TOOLTIP"] = "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.";  // untranslated\nBlockly.Msg["LISTS_INLIST"] = "tetlhDaq";\nBlockly.Msg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated\nBlockly.Msg["LISTS_ISEMPTY_TITLE"] = "%1 chIm\'a\'";\nBlockly.Msg["LISTS_ISEMPTY_TOOLTIP"] = "Returns true if the list is empty.";  // untranslated\nBlockly.Msg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated\nBlockly.Msg["LISTS_LENGTH_TITLE"] = "chuq %1";\nBlockly.Msg["LISTS_LENGTH_TOOLTIP"] = "Returns the length of a list.";  // untranslated\nBlockly.Msg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated\nBlockly.Msg["LISTS_REPEAT_TITLE"] = "tetlh ghom %2 Dochmey %1 pus";\nBlockly.Msg["LISTS_REPEAT_TOOLTIP"] = "Creates a list consisting of the given value repeated the specified number of times.";  // untranslated\nBlockly.Msg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated\nBlockly.Msg["LISTS_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated\nBlockly.Msg["LISTS_REVERSE_TOOLTIP"] = "Reverse a copy of a list.";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_INPUT_TO"] = "Dos";\nBlockly.Msg["LISTS_SET_INDEX_INSERT"] = "lIH";\nBlockly.Msg["LISTS_SET_INDEX_SET"] = "choH";\nBlockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Inserts the item at the start of a list.";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Inserts the item at the specified position in a list.";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Append the item to the end of a list.";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Inserts the item randomly in a list.";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Sets the first item in a list.";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Sets the item at the specified position in a list.";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Sets the last item in a list.";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Sets a random item in a list.";  // untranslated\nBlockly.Msg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated\nBlockly.Msg["LISTS_SORT_ORDER_ASCENDING"] = "ascending";  // untranslated\nBlockly.Msg["LISTS_SORT_ORDER_DESCENDING"] = "descending";  // untranslated\nBlockly.Msg["LISTS_SORT_TITLE"] = "sort %1 %2 %3";  // untranslated\nBlockly.Msg["LISTS_SORT_TOOLTIP"] = "Sort a copy of a list.";  // untranslated\nBlockly.Msg["LISTS_SORT_TYPE_IGNORECASE"] = "alphabetic, ignore case";  // untranslated\nBlockly.Msg["LISTS_SORT_TYPE_NUMERIC"] = "numeric";  // untranslated\nBlockly.Msg["LISTS_SORT_TYPE_TEXT"] = "alphabetic";  // untranslated\nBlockly.Msg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated\nBlockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT"] = "tetlh ghermeH ghItlh wav";\nBlockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST"] = "ghItlh chenmoHmeH tetlh gherHa\'";\nBlockly.Msg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter.";  // untranslated\nBlockly.Msg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter.";  // untranslated\nBlockly.Msg["LISTS_SPLIT_WITH_DELIMITER"] = "rarwI\'Hom lo\'";\nBlockly.Msg["LOGIC_BOOLEAN_FALSE"] = "teHbe\'";\nBlockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated\nBlockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "Returns either true or false.";  // untranslated\nBlockly.Msg["LOGIC_BOOLEAN_TRUE"] = "teH";\nBlockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";  // untranslated\nBlockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Return true if both inputs equal each other.";  // untranslated\nBlockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "Return true if the first input is greater than the second input.";  // untranslated\nBlockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Return true if the first input is greater than or equal to the second input.";  // untranslated\nBlockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "Return true if the first input is smaller than the second input.";  // untranslated\nBlockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Return true if the first input is smaller than or equal to the second input.";  // untranslated\nBlockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Return true if both inputs are not equal to each other.";  // untranslated\nBlockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated\nBlockly.Msg["LOGIC_NEGATE_TITLE"] = "yoymoH %1";\nBlockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "Returns true if the input is false. Returns false if the input is true.";  // untranslated\nBlockly.Msg["LOGIC_NULL"] = "paghna\'";\nBlockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated\nBlockly.Msg["LOGIC_NULL_TOOLTIP"] = "Returns null.";  // untranslated\nBlockly.Msg["LOGIC_OPERATION_AND"] = "\'ej";\nBlockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated\nBlockly.Msg["LOGIC_OPERATION_OR"] = "qoj";\nBlockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "Return true if both inputs are true.";  // untranslated\nBlockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "Return true if at least one of the inputs is true.";  // untranslated\nBlockly.Msg["LOGIC_TERNARY_CONDITION"] = "chov";\nBlockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated\nBlockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "teHbe\'chugh";\nBlockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "teHchugh";\nBlockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "Check the condition in \'test\'. If the condition is true, returns the \'if true\' value; otherwise returns the \'if false\' value.";  // untranslated\nBlockly.Msg["MATH_ADDITION_SYMBOL"] = "+";\nBlockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://en.wikipedia.org/wiki/Arithmetic";  // untranslated\nBlockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Return the sum of the two numbers.";  // untranslated\nBlockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Return the quotient of the two numbers.";  // untranslated\nBlockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Return the difference of the two numbers.";  // untranslated\nBlockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Return the product of the two numbers.";  // untranslated\nBlockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Return the first number raised to the power of the second number.";  // untranslated\nBlockly.Msg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated\nBlockly.Msg["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2";  // untranslated\nBlockly.Msg["MATH_ATAN2_TOOLTIP"] = "Return the arctangent of point (X, Y) in degrees from -180 to 180.";  // untranslated\nBlockly.Msg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated\nBlockly.Msg["MATH_CHANGE_TITLE"] = "choH %1 chel %2";\nBlockly.Msg["MATH_CHANGE_TOOLTIP"] = "Add a number to variable \'%1\'.";  // untranslated\nBlockly.Msg["MATH_CONSTANT_HELPURL"] = "https://en.wikipedia.org/wiki/Mathematical_constant";  // untranslated\nBlockly.Msg["MATH_CONSTANT_TOOLTIP"] = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";  // untranslated\nBlockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated\nBlockly.Msg["MATH_CONSTRAIN_TITLE"] = "jon %1 bIng %2 Dung %3";\nBlockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "Constrain a number to be between the specified limits (inclusive).";  // untranslated\nBlockly.Msg["MATH_DIVISION_SYMBOL"] = "÷";\nBlockly.Msg["MATH_IS_DIVISIBLE_BY"] = "wav\'a\'";\nBlockly.Msg["MATH_IS_EVEN"] = "lang\'a\' mI\'";\nBlockly.Msg["MATH_IS_NEGATIVE"] = "bIng pagh";\nBlockly.Msg["MATH_IS_ODD"] = "ror\'a\' mI\'";\nBlockly.Msg["MATH_IS_POSITIVE"] = "Dung pagh";\nBlockly.Msg["MATH_IS_PRIME"] = "potlh\'a\' mI\'";\nBlockly.Msg["MATH_IS_TOOLTIP"] = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.";  // untranslated\nBlockly.Msg["MATH_IS_WHOLE"] = "ngoHlaHbe\'\'a\'";\nBlockly.Msg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";  // untranslated\nBlockly.Msg["MATH_MODULO_TITLE"] = "ratlwI\' SIm %1 ÷ %2";\nBlockly.Msg["MATH_MODULO_TOOLTIP"] = "Return the remainder from dividing the two numbers.";  // untranslated\nBlockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "×";\nBlockly.Msg["MATH_NUMBER_HELPURL"] = "https://en.wikipedia.org/wiki/Number";  // untranslated\nBlockly.Msg["MATH_NUMBER_TOOLTIP"] = "A number.";  // untranslated\nBlockly.Msg["MATH_ONLIST_HELPURL"] = "";  // untranslated\nBlockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "beQwI\' SIm tetlh";\nBlockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "tInwI\'\'a\' SIm tetlh";\nBlockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "beQwI\'botlh SIm tetlh";\nBlockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "machwI\'\'a\' SIm tetlh";\nBlockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "beQwI\' motlh SIm tetlh";\nBlockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "SaHbe\' SIm tetlh";\nBlockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "motlhbe\'wI\' SIm tetlh";\nBlockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "chelwI\' SIm tetlh";\nBlockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Return the average (arithmetic mean) of the numeric values in the list.";  // untranslated\nBlockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "Return the largest number in the list.";  // untranslated\nBlockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Return the median number in the list.";  // untranslated\nBlockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "Return the smallest number in the list.";  // untranslated\nBlockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "Return a list of the most common item(s) in the list.";  // untranslated\nBlockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Return a random element from the list.";  // untranslated\nBlockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Return the standard deviation of the list.";  // untranslated\nBlockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "Return the sum of all the numbers in the list.";  // untranslated\nBlockly.Msg["MATH_POWER_SYMBOL"] = "^";\nBlockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated\nBlockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "mI\'HomSaHbe\'";\nBlockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";  // untranslated\nBlockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated\nBlockly.Msg["MATH_RANDOM_INT_TITLE"] = "ngoH mI\'SaHbe\' bIng %1 Dung %2";\nBlockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "Return a random integer between the two specified limits, inclusive.";  // untranslated\nBlockly.Msg["MATH_ROUND_HELPURL"] = "https://en.wikipedia.org/wiki/Rounding";  // untranslated\nBlockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "ngoH";\nBlockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "bIng ngoH";\nBlockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "Dung ngoH";\nBlockly.Msg["MATH_ROUND_TOOLTIP"] = "Round a number up or down.";  // untranslated\nBlockly.Msg["MATH_SINGLE_HELPURL"] = "https://en.wikipedia.org/wiki/Square_root";  // untranslated\nBlockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "Dung pagh choH";\nBlockly.Msg["MATH_SINGLE_OP_ROOT"] = "cha\'DIch wav";\nBlockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "Return the absolute value of a number.";  // untranslated\nBlockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "Return e to the power of a number.";  // untranslated\nBlockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "Return the natural logarithm of a number.";  // untranslated\nBlockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "Return the base 10 logarithm of a number.";  // untranslated\nBlockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "Return the negation of a number.";  // untranslated\nBlockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "Return 10 to the power of a number.";  // untranslated\nBlockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "Return the square root of a number.";  // untranslated\nBlockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "-";\nBlockly.Msg["MATH_TRIG_ACOS"] = "acos";\nBlockly.Msg["MATH_TRIG_ASIN"] = "asin";\nBlockly.Msg["MATH_TRIG_ATAN"] = "atan";\nBlockly.Msg["MATH_TRIG_COS"] = "cos";\nBlockly.Msg["MATH_TRIG_HELPURL"] = "https://en.wikipedia.org/wiki/Trigonometric_functions";  // untranslated\nBlockly.Msg["MATH_TRIG_SIN"] = "sin";\nBlockly.Msg["MATH_TRIG_TAN"] = "tan";\nBlockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "Return the arccosine of a number.";  // untranslated\nBlockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "Return the arcsine of a number.";  // untranslated\nBlockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "Return the arctangent of a number.";  // untranslated\nBlockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "Return the cosine of a degree (not radian).";  // untranslated\nBlockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "Return the sine of a degree (not radian).";  // untranslated\nBlockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "Return the tangent of a degree (not radian).";  // untranslated\nBlockly.Msg["NEW_COLOUR_VARIABLE"] = "Create colour variable...";  // untranslated\nBlockly.Msg["NEW_NUMBER_VARIABLE"] = "Create number variable...";  // untranslated\nBlockly.Msg["NEW_STRING_VARIABLE"] = "Create string variable...";  // untranslated\nBlockly.Msg["NEW_VARIABLE"] = "lIw chu\'...";\nBlockly.Msg["NEW_VARIABLE_TITLE"] = "lIw chu\' pong:";\nBlockly.Msg["NEW_VARIABLE_TYPE_TITLE"] = "New variable type:";  // untranslated\nBlockly.Msg["ORDINAL_NUMBER_SUFFIX"] = "";\nBlockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "mu\'tlhegh chaw\'";\nBlockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "qel:";\nBlockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated\nBlockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Run the user-defined function \'%1\'.";  // untranslated\nBlockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated\nBlockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Run the user-defined function \'%1\' and use its output.";  // untranslated\nBlockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = "qel:";\nBlockly.Msg["PROCEDURES_CREATE_DO"] = "chel \'%1\'";\nBlockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"] = "mIw yIDel...";\nBlockly.Msg["PROCEDURES_DEFNORETURN_DO"] = "";\nBlockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated\nBlockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "mIw";\nBlockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "ruch";\nBlockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Creates a function with no output.";  // untranslated\nBlockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated\nBlockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "chegh";\nBlockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Creates a function with an output.";  // untranslated\nBlockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "ghuHmoHna\': qelwI\' cha\'logh chen.";\nBlockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "mIwna\' wew";\nBlockly.Msg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated\nBlockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "If a value is true, then return a second value.";  // untranslated\nBlockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "ghoHmoHna\': ngoghvam ngaSbe\' mIwDaq.";\nBlockly.Msg["PROCEDURES_MUTATORARG_TITLE"] = "pong:";\nBlockly.Msg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Add an input to the function.";  // untranslated\nBlockly.Msg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "qelwI\'mey";\nBlockly.Msg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Add, remove, or reorder inputs to this function.";  // untranslated\nBlockly.Msg["REDO"] = "vangqa\'";\nBlockly.Msg["REMOVE_COMMENT"] = "QInHom chelHa\'";\nBlockly.Msg["RENAME_VARIABLE"] = "lIw pong choH...";\nBlockly.Msg["RENAME_VARIABLE_TITLE"] = "Hoch \\"%1\\" lIwmey pongmey choH:";\nBlockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated\nBlockly.Msg["TEXT_APPEND_TITLE"] = "chel %1 ghItlh %2";\nBlockly.Msg["TEXT_APPEND_TOOLTIP"] = "Append some text to variable \'%1\'.";  // untranslated\nBlockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated\nBlockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "machchoH";\nBlockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "DojchoH";\nBlockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "tInchoH";\nBlockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "Return a copy of the text in a different case.";  // untranslated\nBlockly.Msg["TEXT_CHARAT_FIRST"] = "mu\'Hom wa\'DIch";\nBlockly.Msg["TEXT_CHARAT_FROM_END"] = "mu\'Hom # Qav";\nBlockly.Msg["TEXT_CHARAT_FROM_START"] = "mu\'Hom #";\nBlockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated\nBlockly.Msg["TEXT_CHARAT_LAST"] = "mu\'Hom Qav";\nBlockly.Msg["TEXT_CHARAT_RANDOM"] = "mu\'Hom SaHbe\'";\nBlockly.Msg["TEXT_CHARAT_TAIL"] = "Suq";\nBlockly.Msg["TEXT_CHARAT_TITLE"] = "in text %1 %2";  // untranslated\nBlockly.Msg["TEXT_CHARAT_TOOLTIP"] = "Returns the letter at the specified position.";  // untranslated\nBlockly.Msg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated\nBlockly.Msg["TEXT_COUNT_MESSAGE0"] = "count %1 in %2";  // untranslated\nBlockly.Msg["TEXT_COUNT_TOOLTIP"] = "Count how many times some text occurs within some other text.";  // untranslated\nBlockly.Msg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Add an item to the text.";  // untranslated\nBlockly.Msg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "ghom";\nBlockly.Msg["TEXT_CREATE_JOIN_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this text block.";  // untranslated\nBlockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "mojaq mu\'Hom # Qav";\nBlockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "mojaq mu\'Hom #";\nBlockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "mojaq mu\'Hom Qav";\nBlockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated\nBlockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "ghItlhDaq";\nBlockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "ghItlhHom moHaq mu\'Hom wa\'DIch";\nBlockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "ghItlhHom moHaq mu\'Hom # Qav";\nBlockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "ghItlhHom moHaq mu\'Hom #";\nBlockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = "Suq";\nBlockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Returns a specified portion of the text.";  // untranslated\nBlockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated\nBlockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "ghItlh wa\'DIch Sam";\nBlockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "ghItlh Qav Sam";\nBlockly.Msg["TEXT_INDEXOF_TITLE"] = "ghItlhDaq %1 %2 %3";\nBlockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.";  // untranslated\nBlockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated\nBlockly.Msg["TEXT_ISEMPTY_TITLE"] = "%1 chIm\'a\'";\nBlockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "Returns true if the provided text is empty.";  // untranslated\nBlockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated\nBlockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "ghItlh ghom";\nBlockly.Msg["TEXT_JOIN_TOOLTIP"] = "Create a piece of text by joining together any number of items.";  // untranslated\nBlockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated\nBlockly.Msg["TEXT_LENGTH_TITLE"] = "chuq %1";\nBlockly.Msg["TEXT_LENGTH_TOOLTIP"] = "Returns the number of letters (including spaces) in the provided text.";  // untranslated\nBlockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated\nBlockly.Msg["TEXT_PRINT_TITLE"] = "maq %1";\nBlockly.Msg["TEXT_PRINT_TOOLTIP"] = "Print the specified text, number or other value.";  // untranslated\nBlockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated\nBlockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Prompt for user for a number.";  // untranslated\nBlockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Prompt for user for some text.";  // untranslated\nBlockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "mI\' tlhob \'ej maq";\nBlockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "ghItln tlhob \'ej maq";\nBlockly.Msg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated\nBlockly.Msg["TEXT_REPLACE_MESSAGE0"] = "replace %1 with %2 in %3";  // untranslated\nBlockly.Msg["TEXT_REPLACE_TOOLTIP"] = "Replace all occurances of some text within some other text.";  // untranslated\nBlockly.Msg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated\nBlockly.Msg["TEXT_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated\nBlockly.Msg["TEXT_REVERSE_TOOLTIP"] = "Reverses the order of the characters in the text.";  // untranslated\nBlockly.Msg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";  // untranslated\nBlockly.Msg["TEXT_TEXT_TOOLTIP"] = "A letter, word, or line of text.";  // untranslated\nBlockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated\nBlockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "poSnIHlogh pei";\nBlockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "poSlogh pei";\nBlockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "nIHlogh pei";\nBlockly.Msg["TEXT_TRIM_TOOLTIP"] = "Return a copy of the text with spaces removed from one or both ends.";  // untranslated\nBlockly.Msg["TODAY"] = "DaHjaj";\nBlockly.Msg["UNDO"] = "vangHa\'";\nBlockly.Msg["VARIABLES_DEFAULT_NAME"] = "Doch";\nBlockly.Msg["VARIABLES_GET_CREATE_SET"] = "chel \'choH %1\'";\nBlockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated\nBlockly.Msg["VARIABLES_GET_TOOLTIP"] = "Returns the value of this variable.";  // untranslated\nBlockly.Msg["VARIABLES_SET"] = "choH %1 %2";\nBlockly.Msg["VARIABLES_SET_CREATE_GET"] = "chel \'Suq %1\'";\nBlockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated\nBlockly.Msg["VARIABLES_SET_TOOLTIP"] = "Sets this variable to be equal to the input.";  // untranslated\nBlockly.Msg["VARIABLE_ALREADY_EXISTS"] = "A variable named \'%1\' already exists.";  // untranslated\nBlockly.Msg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "A variable named \'%1\' already exists for another type: \'%2\'.";  // untranslated\nBlockly.Msg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Say something...";  // untranslated\nBlockly.Msg["CONTROLS_FOREACH_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];\nBlockly.Msg["CONTROLS_FOR_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];\nBlockly.Msg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"];\nBlockly.Msg["CONTROLS_IF_ELSE_TITLE_ELSE"] = Blockly.Msg["CONTROLS_IF_MSG_ELSE"];\nBlockly.Msg["CONTROLS_IF_IF_TITLE_IF"] = Blockly.Msg["CONTROLS_IF_MSG_IF"];\nBlockly.Msg["CONTROLS_IF_MSG_THEN"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];\nBlockly.Msg["CONTROLS_WHILEUNTIL_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];\nBlockly.Msg["LISTS_CREATE_WITH_ITEM_TITLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];\nBlockly.Msg["LISTS_GET_INDEX_HELPURL"] = Blockly.Msg["LISTS_INDEX_OF_HELPURL"];\nBlockly.Msg["LISTS_GET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];\nBlockly.Msg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];\nBlockly.Msg["LISTS_INDEX_OF_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];\nBlockly.Msg["LISTS_SET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];\nBlockly.Msg["MATH_CHANGE_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];\nBlockly.Msg["PROCEDURES_DEFRETURN_COMMENT"] = Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"];\nBlockly.Msg["PROCEDURES_DEFRETURN_DO"] = Blockly.Msg["PROCEDURES_DEFNORETURN_DO"];\nBlockly.Msg["PROCEDURES_DEFRETURN_PROCEDURE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"];\nBlockly.Msg["PROCEDURES_DEFRETURN_TITLE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"];\nBlockly.Msg["TEXT_APPEND_VARIABLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];\nBlockly.Msg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];\n\nBlockly.Msg["MATH_HUE"] = "230";\nBlockly.Msg["LOOPS_HUE"] = "120";\nBlockly.Msg["LISTS_HUE"] = "260";\nBlockly.Msg["LOGIC_HUE"] = "210";\nBlockly.Msg["VARIABLES_HUE"] = "330";\nBlockly.Msg["TEXTS_HUE"] = "160";\nBlockly.Msg["PROCEDURES_HUE"] = "290";\nBlockly.Msg["COLOUR_HUE"] = "20";\nBlockly.Msg["VARIABLES_DYNAMIC_HUE"] = "310";return Blockly.Msg;}\n\n//# sourceURL=webpack:///./node_modules/node-blockly/lib/i18n/tlh.js?')}}]);