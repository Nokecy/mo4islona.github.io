(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{48:function(module,exports){eval('var Blockly = {}; Blockly.Msg={};  module.exports = function(){ // This file was automatically generated.  Do not modify.\n\n\'use strict\';\n\n\n\n\n\nBlockly.Msg["ADD_COMMENT"] = "Додај коментар:";\nBlockly.Msg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Can\'t delete the variable \'%1\' because it\'s part of the definition of the function \'%2\'";  // untranslated\nBlockly.Msg["CHANGE_VALUE_TITLE"] = "Смена на вредност:";\nBlockly.Msg["CLEAN_UP"] = "Clean up Blocks";  // untranslated\nBlockly.Msg["COLLAPSE_ALL"] = "Собери блокови";\nBlockly.Msg["COLLAPSE_BLOCK"] = "Собери блок";\nBlockly.Msg["COLOUR_BLEND_COLOUR1"] = "боја 1";\nBlockly.Msg["COLOUR_BLEND_COLOUR2"] = "боја 2";\nBlockly.Msg["COLOUR_BLEND_HELPURL"] = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated\nBlockly.Msg["COLOUR_BLEND_RATIO"] = "сооднос";\nBlockly.Msg["COLOUR_BLEND_TITLE"] = "смешај";\nBlockly.Msg["COLOUR_BLEND_TOOLTIP"] = "Меша две бои во даден сооднос (0.0 - 1.0).";\nBlockly.Msg["COLOUR_PICKER_HELPURL"] = "https://mk.wikipedia.org/wiki/Боја";\nBlockly.Msg["COLOUR_PICKER_TOOLTIP"] = "Изберете боја од палетата.";\nBlockly.Msg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated\nBlockly.Msg["COLOUR_RANDOM_TITLE"] = "случајна боја";\nBlockly.Msg["COLOUR_RANDOM_TOOLTIP"] = "Избери боја на тепка.";\nBlockly.Msg["COLOUR_RGB_BLUE"] = "сина";\nBlockly.Msg["COLOUR_RGB_GREEN"] = "зелена";\nBlockly.Msg["COLOUR_RGB_HELPURL"] = "http://www.december.com/html/spec/colorper.html";  // untranslated\nBlockly.Msg["COLOUR_RGB_RED"] = "црвена";\nBlockly.Msg["COLOUR_RGB_TITLE"] = "боја со";\nBlockly.Msg["COLOUR_RGB_TOOLTIP"] = "Создајте боја со укажаните износи на црвена, зелена и сина. Сите вредности мора да бидат помеѓу 0 и 100.";\nBlockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated\nBlockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "излези од јамката";\nBlockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "продолжи со следното повторување на јамката";\nBlockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Излези од содржечката јамка.";\nBlockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Skip the rest of this loop, and continue with the next iteration.";  // untranslated\nBlockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Warning: This block may only be used within a loop.";  // untranslated\nBlockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated\nBlockly.Msg["CONTROLS_FOREACH_TITLE"] = "за секој елемент %1 на списокот %2";\nBlockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "Му ја задава променливата „%1“ на секој елемент на списокот, а потоа исполнува наредби.";\nBlockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated\nBlockly.Msg["CONTROLS_FOR_TITLE"] = "број со %1 од %2 до %3 со %4";\nBlockly.Msg["CONTROLS_FOR_TOOLTIP"] = "Променливата „%1“ да ги земе вредностите од почетниот до завршниот број, броејќи според укажаниот интервал и ги исполнува укажаните блокови.";\nBlockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Add a condition to the if block.";  // untranslated\nBlockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "Add a final, catch-all condition to the if block.";  // untranslated\nBlockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated\nBlockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "Додава, отстранува или прередува делови за прераспоредување на овој блок „ако“.";\nBlockly.Msg["CONTROLS_IF_MSG_ELSE"] = "инаку";\nBlockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "инаку ако";\nBlockly.Msg["CONTROLS_IF_MSG_IF"] = "ако";\nBlockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "If a value is true, then do some statements.";  // untranslated\nBlockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.";  // untranslated\nBlockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";  // untranslated\nBlockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";  // untranslated\nBlockly.Msg["CONTROLS_REPEAT_HELPURL"] = "https://mk.wikipedia.org/wiki/For-јамка";\nBlockly.Msg["CONTROLS_REPEAT_INPUT_DO"] = "исполни";\nBlockly.Msg["CONTROLS_REPEAT_TITLE"] = "повтори %1 пати";\nBlockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "Исполнува наредби неколку пати.";\nBlockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated\nBlockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "повторувај сè до";\nBlockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "повторувај додека";\nBlockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Додека вредноста е невистинита, исполнува наредби.";\nBlockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Додека вредноста е вистинита, исполнува наредби.";\nBlockly.Msg["DELETE_ALL_BLOCKS"] = "Да ги избришам сите %1 блокчиња?";\nBlockly.Msg["DELETE_BLOCK"] = "Избриши блок";\nBlockly.Msg["DELETE_VARIABLE"] = "Delete the \'%1\' variable";  // untranslated\nBlockly.Msg["DELETE_VARIABLE_CONFIRMATION"] = "Delete %1 uses of the \'%2\' variable?";  // untranslated\nBlockly.Msg["DELETE_X_BLOCKS"] = "Избриши %1 блока";\nBlockly.Msg["DISABLE_BLOCK"] = "Исклучи блок";\nBlockly.Msg["DUPLICATE_BLOCK"] = "Ископирај";\nBlockly.Msg["DUPLICATE_COMMENT"] = "Duplicate Comment";  // untranslated\nBlockly.Msg["ENABLE_BLOCK"] = "Вклучи блок";\nBlockly.Msg["EXPAND_ALL"] = "Рашири блокови";\nBlockly.Msg["EXPAND_BLOCK"] = "Рашири го блокови";\nBlockly.Msg["EXTERNAL_INPUTS"] = "Надворешен внос";\nBlockly.Msg["HELP"] = "Помош";\nBlockly.Msg["INLINE_INPUTS"] = "Внатрешен внос";\nBlockly.Msg["IOS_CANCEL"] = "Cancel";  // untranslated\nBlockly.Msg["IOS_ERROR"] = "Error";  // untranslated\nBlockly.Msg["IOS_OK"] = "OK";  // untranslated\nBlockly.Msg["IOS_PROCEDURES_ADD_INPUT"] = "+ Add Input";  // untranslated\nBlockly.Msg["IOS_PROCEDURES_ALLOW_STATEMENTS"] = "Allow statements";  // untranslated\nBlockly.Msg["IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR"] = "This function has duplicate inputs.";  // untranslated\nBlockly.Msg["IOS_PROCEDURES_INPUTS"] = "INPUTS";  // untranslated\nBlockly.Msg["IOS_VARIABLES_ADD_BUTTON"] = "Add";  // untranslated\nBlockly.Msg["IOS_VARIABLES_ADD_VARIABLE"] = "+ Add Variable";  // untranslated\nBlockly.Msg["IOS_VARIABLES_DELETE_BUTTON"] = "Delete";  // untranslated\nBlockly.Msg["IOS_VARIABLES_EMPTY_NAME_ERROR"] = "You can\'t use an empty variable name.";  // untranslated\nBlockly.Msg["IOS_VARIABLES_RENAME_BUTTON"] = "Rename";  // untranslated\nBlockly.Msg["IOS_VARIABLES_VARIABLE_NAME"] = "Variable name";  // untranslated\nBlockly.Msg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated\nBlockly.Msg["LISTS_CREATE_EMPTY_TITLE"] = "create empty list";  // untranslated\nBlockly.Msg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Returns a list, of length 0, containing no data records";  // untranslated\nBlockly.Msg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "list";  // untranslated\nBlockly.Msg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this list block.";  // untranslated\nBlockly.Msg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated\nBlockly.Msg["LISTS_CREATE_WITH_INPUT_WITH"] = "create list with";  // untranslated\nBlockly.Msg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Add an item to the list.";  // untranslated\nBlockly.Msg["LISTS_CREATE_WITH_TOOLTIP"] = "Create a list with any number of items.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_FIRST"] = "first";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_FROM_END"] = "# from end";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_FROM_START"] = "#";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_GET"] = "get";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_GET_REMOVE"] = "get and remove";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_LAST"] = "last";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_RANDOM"] = "random";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_REMOVE"] = "remove";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Returns the first item in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Returns the item at the specified position in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Returns the last item in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Returns a random item in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Removes and returns the first item in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Removes and returns the item at the specified position in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Removes and returns the last item in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Removes and returns a random item in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Removes the first item in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Removes the item at the specified position in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Removes the last item in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Removes a random item in a list.";  // untranslated\nBlockly.Msg["LISTS_GET_SUBLIST_END_FROM_END"] = "to # from end";  // untranslated\nBlockly.Msg["LISTS_GET_SUBLIST_END_FROM_START"] = "to #";  // untranslated\nBlockly.Msg["LISTS_GET_SUBLIST_END_LAST"] = "to last";  // untranslated\nBlockly.Msg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated\nBlockly.Msg["LISTS_GET_SUBLIST_START_FIRST"] = "get sub-list from first";  // untranslated\nBlockly.Msg["LISTS_GET_SUBLIST_START_FROM_END"] = "get sub-list from # from end";  // untranslated\nBlockly.Msg["LISTS_GET_SUBLIST_START_FROM_START"] = "get sub-list from #";  // untranslated\nBlockly.Msg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated\nBlockly.Msg["LISTS_GET_SUBLIST_TOOLTIP"] = "Creates a copy of the specified portion of a list.";  // untranslated\nBlockly.Msg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 is the last item.";  // untranslated\nBlockly.Msg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 is the first item.";  // untranslated\nBlockly.Msg["LISTS_INDEX_OF_FIRST"] = "find first occurrence of item";  // untranslated\nBlockly.Msg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated\nBlockly.Msg["LISTS_INDEX_OF_LAST"] = "find last occurrence of item";  // untranslated\nBlockly.Msg["LISTS_INDEX_OF_TOOLTIP"] = "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.";  // untranslated\nBlockly.Msg["LISTS_INLIST"] = "in list";  // untranslated\nBlockly.Msg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated\nBlockly.Msg["LISTS_ISEMPTY_TITLE"] = "%1 is empty";  // untranslated\nBlockly.Msg["LISTS_ISEMPTY_TOOLTIP"] = "Returns true if the list is empty.";  // untranslated\nBlockly.Msg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated\nBlockly.Msg["LISTS_LENGTH_TITLE"] = "length of %1";  // untranslated\nBlockly.Msg["LISTS_LENGTH_TOOLTIP"] = "Returns the length of a list.";  // untranslated\nBlockly.Msg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated\nBlockly.Msg["LISTS_REPEAT_TITLE"] = "create list with item %1 repeated %2 times";  // untranslated\nBlockly.Msg["LISTS_REPEAT_TOOLTIP"] = "Creates a list consisting of the given value repeated the specified number of times.";  // untranslated\nBlockly.Msg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated\nBlockly.Msg["LISTS_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated\nBlockly.Msg["LISTS_REVERSE_TOOLTIP"] = "Reverse a copy of a list.";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_INPUT_TO"] = "as";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_INSERT"] = "insert at";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_SET"] = "set";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Inserts the item at the start of a list.";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Inserts the item at the specified position in a list.";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Append the item to the end of a list.";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Inserts the item randomly in a list.";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Sets the first item in a list.";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Sets the item at the specified position in a list.";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Sets the last item in a list.";  // untranslated\nBlockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Sets a random item in a list.";  // untranslated\nBlockly.Msg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated\nBlockly.Msg["LISTS_SORT_ORDER_ASCENDING"] = "ascending";  // untranslated\nBlockly.Msg["LISTS_SORT_ORDER_DESCENDING"] = "descending";  // untranslated\nBlockly.Msg["LISTS_SORT_TITLE"] = "sort %1 %2 %3";  // untranslated\nBlockly.Msg["LISTS_SORT_TOOLTIP"] = "Sort a copy of a list.";  // untranslated\nBlockly.Msg["LISTS_SORT_TYPE_IGNORECASE"] = "alphabetic, ignore case";  // untranslated\nBlockly.Msg["LISTS_SORT_TYPE_NUMERIC"] = "numeric";  // untranslated\nBlockly.Msg["LISTS_SORT_TYPE_TEXT"] = "alphabetic";  // untranslated\nBlockly.Msg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated\nBlockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT"] = "make list from text";  // untranslated\nBlockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST"] = "make text from list";  // untranslated\nBlockly.Msg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter.";  // untranslated\nBlockly.Msg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter.";  // untranslated\nBlockly.Msg["LISTS_SPLIT_WITH_DELIMITER"] = "with delimiter";  // untranslated\nBlockly.Msg["LOGIC_BOOLEAN_FALSE"] = "невистина";\nBlockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated\nBlockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "Дава или вистина или невистина.";\nBlockly.Msg["LOGIC_BOOLEAN_TRUE"] = "вистина";\nBlockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://mk.wikipedia.org/wiki/Неравенство";\nBlockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Дава вистина ако обата вноса се еднакви.";\nBlockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "Дава вистина ако првиот внос е поголем од вториот.";\nBlockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Дава вистина ако првиот внос е поголем или еднаков на вториот.";\nBlockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "Дава вистина ако првиот внос е помал од вториот.";\nBlockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Дава вистина ако првиот внос е помал или еднаков на  вториот.";\nBlockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Дава вистина ако обата вноса не се еднакви.";\nBlockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated\nBlockly.Msg["LOGIC_NEGATE_TITLE"] = "не %1";\nBlockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "Дава вистина ако вносот е невистинит. Дава невистина ако вносот е вистинит.";\nBlockly.Msg["LOGIC_NULL"] = "ништо";\nBlockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated\nBlockly.Msg["LOGIC_NULL_TOOLTIP"] = "Дава ништо.";\nBlockly.Msg["LOGIC_OPERATION_AND"] = "и";\nBlockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated\nBlockly.Msg["LOGIC_OPERATION_OR"] = "или";\nBlockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "Дава вистина ако обата вноса се вистинити.";\nBlockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "Дава вистина ако барем еден од вносовите е вистинит.";\nBlockly.Msg["LOGIC_TERNARY_CONDITION"] = "испробај";\nBlockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated\nBlockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "ако е невистинито";\nBlockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "ако е вистинито";\nBlockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "Check the condition in \'test\'. If the condition is true, returns the \'if true\' value; otherwise returns the \'if false\' value.";  // untranslated\nBlockly.Msg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated\nBlockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://en.wikipedia.org/wiki/Arithmetic";  // untranslated\nBlockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Return the sum of the two numbers.";  // untranslated\nBlockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Return the quotient of the two numbers.";  // untranslated\nBlockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Return the difference of the two numbers.";  // untranslated\nBlockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Return the product of the two numbers.";  // untranslated\nBlockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Return the first number raised to the power of the second number.";  // untranslated\nBlockly.Msg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated\nBlockly.Msg["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2";  // untranslated\nBlockly.Msg["MATH_ATAN2_TOOLTIP"] = "Return the arctangent of point (X, Y) in degrees from -180 to 180.";  // untranslated\nBlockly.Msg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter?uselang=mk";\nBlockly.Msg["MATH_CHANGE_TITLE"] = "повиши %1 за %2";\nBlockly.Msg["MATH_CHANGE_TOOLTIP"] = "Ѝ додава број на променливата „%1“.";\nBlockly.Msg["MATH_CONSTANT_HELPURL"] = "https://mk.wikipedia.org/wiki/Математичка_константа";\nBlockly.Msg["MATH_CONSTANT_TOOLTIP"] = "Дава една од вообичаените константи: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), или ∞ (бесконечност).";\nBlockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated\nBlockly.Msg["MATH_CONSTRAIN_TITLE"] = "constrain %1 low %2 high %3";  // untranslated\nBlockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "Constrain a number to be between the specified limits (inclusive).";  // untranslated\nBlockly.Msg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated\nBlockly.Msg["MATH_IS_DIVISIBLE_BY"] = "е делив со";\nBlockly.Msg["MATH_IS_EVEN"] = "е парен";\nBlockly.Msg["MATH_IS_NEGATIVE"] = "е негативен";\nBlockly.Msg["MATH_IS_ODD"] = "е непарен";\nBlockly.Msg["MATH_IS_POSITIVE"] = "е позитивен";\nBlockly.Msg["MATH_IS_PRIME"] = "е прост";\nBlockly.Msg["MATH_IS_TOOLTIP"] = "Проверува дали бројот е парен, непарен, прост, цел, позитивен, негативен или делив со некој број. Дава вистина или невистина.";\nBlockly.Msg["MATH_IS_WHOLE"] = "е цел";\nBlockly.Msg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";  // untranslated\nBlockly.Msg["MATH_MODULO_TITLE"] = "remainder of %1 ÷ %2";  // untranslated\nBlockly.Msg["MATH_MODULO_TOOLTIP"] = "Return the remainder from dividing the two numbers.";  // untranslated\nBlockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated\nBlockly.Msg["MATH_NUMBER_HELPURL"] = "https://en.wikipedia.org/wiki/Number";  // untranslated\nBlockly.Msg["MATH_NUMBER_TOOLTIP"] = "A number.";  // untranslated\nBlockly.Msg["MATH_ONLIST_HELPURL"] = "";  // untranslated\nBlockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "просек на списокот";\nBlockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "најголем на списокот";\nBlockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "медијана на списокот";\nBlockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "најмал на списокот";\nBlockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "модул на списокот";\nBlockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "random item of list";  // untranslated\nBlockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "standard deviation of list";  // untranslated\nBlockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "збир од списокот";\nBlockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Дава просек (аритметичка средина) од броевите на списокот.";\nBlockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "Го дава најголемиот број на списокот.";\nBlockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Дава медијана од броевите на списокот.";\nBlockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "Го дава најмалиот број на списокот.";\nBlockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "Дава список на најзастапен(и) елемент(и) на списокот.";\nBlockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Return a random element from the list.";  // untranslated\nBlockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Return the standard deviation of the list.";  // untranslated\nBlockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "Дава збир од сите броеви на списокот.";\nBlockly.Msg["MATH_POWER_SYMBOL"] = "^";  // untranslated\nBlockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated\nBlockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "random fraction";  // untranslated\nBlockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";  // untranslated\nBlockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated\nBlockly.Msg["MATH_RANDOM_INT_TITLE"] = "random integer from %1 to %2";  // untranslated\nBlockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "Return a random integer between the two specified limits, inclusive.";  // untranslated\nBlockly.Msg["MATH_ROUND_HELPURL"] = "https://mk.wikipedia.org/wiki/Заокружување";\nBlockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "заокружи";\nBlockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "заокружи на помало";\nBlockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "заокружи на поголемо";\nBlockly.Msg["MATH_ROUND_TOOLTIP"] = "Го заокружува бројот на поголем или помал.";\nBlockly.Msg["MATH_SINGLE_HELPURL"] = "https://en.wikipedia.org/wiki/Square_root";  // untranslated\nBlockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "absolute";  // untranslated\nBlockly.Msg["MATH_SINGLE_OP_ROOT"] = "square root";  // untranslated\nBlockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "Return the absolute value of a number.";  // untranslated\nBlockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "Return e to the power of a number.";  // untranslated\nBlockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "Return the natural logarithm of a number.";  // untranslated\nBlockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "Return the base 10 logarithm of a number.";  // untranslated\nBlockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "Return the negation of a number.";  // untranslated\nBlockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "Return 10 to the power of a number.";  // untranslated\nBlockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "Return the square root of a number.";  // untranslated\nBlockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated\nBlockly.Msg["MATH_TRIG_ACOS"] = "acos";  // untranslated\nBlockly.Msg["MATH_TRIG_ASIN"] = "asin";  // untranslated\nBlockly.Msg["MATH_TRIG_ATAN"] = "atan";  // untranslated\nBlockly.Msg["MATH_TRIG_COS"] = "cos";  // untranslated\nBlockly.Msg["MATH_TRIG_HELPURL"] = "https://en.wikipedia.org/wiki/Trigonometric_functions";  // untranslated\nBlockly.Msg["MATH_TRIG_SIN"] = "sin";  // untranslated\nBlockly.Msg["MATH_TRIG_TAN"] = "tan";  // untranslated\nBlockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "Return the arccosine of a number.";  // untranslated\nBlockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "Return the arcsine of a number.";  // untranslated\nBlockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "Return the arctangent of a number.";  // untranslated\nBlockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "Return the cosine of a degree (not radian).";  // untranslated\nBlockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "Return the sine of a degree (not radian).";  // untranslated\nBlockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "Return the tangent of a degree (not radian).";  // untranslated\nBlockly.Msg["NEW_COLOUR_VARIABLE"] = "Create colour variable...";  // untranslated\nBlockly.Msg["NEW_NUMBER_VARIABLE"] = "Create number variable...";  // untranslated\nBlockly.Msg["NEW_STRING_VARIABLE"] = "Create string variable...";  // untranslated\nBlockly.Msg["NEW_VARIABLE"] = "Нова променлива...";\nBlockly.Msg["NEW_VARIABLE_TITLE"] = "Назив на новата променлива:";\nBlockly.Msg["NEW_VARIABLE_TYPE_TITLE"] = "New variable type:";  // untranslated\nBlockly.Msg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated\nBlockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "allow statements";  // untranslated\nBlockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "with:";  // untranslated\nBlockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://mk.wikipedia.org/wiki/Потпрограма";\nBlockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Run the user-defined function \'%1\'.";  // untranslated\nBlockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated\nBlockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Run the user-defined function \'%1\' and use its output.";  // untranslated\nBlockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = "with:";  // untranslated\nBlockly.Msg["PROCEDURES_CREATE_DO"] = "Create \'%1\'";  // untranslated\nBlockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"] = "Describe this function...";  // untranslated\nBlockly.Msg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated\nBlockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated\nBlockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "do something";  // untranslated\nBlockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "to";  // untranslated\nBlockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Creates a function with no output.";  // untranslated\nBlockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated\nBlockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "return";  // untranslated\nBlockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Creates a function with an output.";  // untranslated\nBlockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Warning: This function has duplicate parameters.";  // untranslated\nBlockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "Highlight function definition";  // untranslated\nBlockly.Msg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated\nBlockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "If a value is true, then return a second value.";  // untranslated\nBlockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "Warning: This block may be used only within a function definition.";  // untranslated\nBlockly.Msg["PROCEDURES_MUTATORARG_TITLE"] = "input name:";  // untranslated\nBlockly.Msg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Add an input to the function.";  // untranslated\nBlockly.Msg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "inputs";  // untranslated\nBlockly.Msg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Add, remove, or reorder inputs to this function.";  // untranslated\nBlockly.Msg["REDO"] = "Redo";  // untranslated\nBlockly.Msg["REMOVE_COMMENT"] = "Отстрани коментар";\nBlockly.Msg["RENAME_VARIABLE"] = "Преименувај променлива...";\nBlockly.Msg["RENAME_VARIABLE_TITLE"] = "Преименувај ги сите променливи „%1“ во:";\nBlockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated\nBlockly.Msg["TEXT_APPEND_TITLE"] = "to %1 append text %2";  // untranslated\nBlockly.Msg["TEXT_APPEND_TOOLTIP"] = "Append some text to variable \'%1\'.";  // untranslated\nBlockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated\nBlockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "to lower case";  // untranslated\nBlockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "to Title Case";  // untranslated\nBlockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "to UPPER CASE";  // untranslated\nBlockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "Return a copy of the text in a different case.";  // untranslated\nBlockly.Msg["TEXT_CHARAT_FIRST"] = "get first letter";  // untranslated\nBlockly.Msg["TEXT_CHARAT_FROM_END"] = "get letter # from end";  // untranslated\nBlockly.Msg["TEXT_CHARAT_FROM_START"] = "get letter #";  // untranslated\nBlockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated\nBlockly.Msg["TEXT_CHARAT_LAST"] = "get last letter";  // untranslated\nBlockly.Msg["TEXT_CHARAT_RANDOM"] = "get random letter";  // untranslated\nBlockly.Msg["TEXT_CHARAT_TAIL"] = "";  // untranslated\nBlockly.Msg["TEXT_CHARAT_TITLE"] = "in text %1 %2";  // untranslated\nBlockly.Msg["TEXT_CHARAT_TOOLTIP"] = "Returns the letter at the specified position.";  // untranslated\nBlockly.Msg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated\nBlockly.Msg["TEXT_COUNT_MESSAGE0"] = "count %1 in %2";  // untranslated\nBlockly.Msg["TEXT_COUNT_TOOLTIP"] = "Count how many times some text occurs within some other text.";  // untranslated\nBlockly.Msg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Add an item to the text.";  // untranslated\nBlockly.Msg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "join";  // untranslated\nBlockly.Msg["TEXT_CREATE_JOIN_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this text block.";  // untranslated\nBlockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "to letter # from end";  // untranslated\nBlockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "to letter #";  // untranslated\nBlockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "to last letter";  // untranslated\nBlockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated\nBlockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "in text";  // untranslated\nBlockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "get substring from first letter";  // untranslated\nBlockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "get substring from letter # from end";  // untranslated\nBlockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "get substring from letter #";  // untranslated\nBlockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated\nBlockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Returns a specified portion of the text.";  // untranslated\nBlockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated\nBlockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "find first occurrence of text";  // untranslated\nBlockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "find last occurrence of text";  // untranslated\nBlockly.Msg["TEXT_INDEXOF_TITLE"] = "in text %1 %2 %3";  // untranslated\nBlockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.";  // untranslated\nBlockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated\nBlockly.Msg["TEXT_ISEMPTY_TITLE"] = "%1 is empty";  // untranslated\nBlockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "Returns true if the provided text is empty.";  // untranslated\nBlockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated\nBlockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "create text with";  // untranslated\nBlockly.Msg["TEXT_JOIN_TOOLTIP"] = "Create a piece of text by joining together any number of items.";  // untranslated\nBlockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated\nBlockly.Msg["TEXT_LENGTH_TITLE"] = "length of %1";  // untranslated\nBlockly.Msg["TEXT_LENGTH_TOOLTIP"] = "Returns the number of letters (including spaces) in the provided text.";  // untranslated\nBlockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated\nBlockly.Msg["TEXT_PRINT_TITLE"] = "print %1";  // untranslated\nBlockly.Msg["TEXT_PRINT_TOOLTIP"] = "Print the specified text, number or other value.";  // untranslated\nBlockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated\nBlockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Prompt for user for a number.";  // untranslated\nBlockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Prompt for user for some text.";  // untranslated\nBlockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "prompt for number with message";  // untranslated\nBlockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "prompt for text with message";  // untranslated\nBlockly.Msg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated\nBlockly.Msg["TEXT_REPLACE_MESSAGE0"] = "replace %1 with %2 in %3";  // untranslated\nBlockly.Msg["TEXT_REPLACE_TOOLTIP"] = "Replace all occurances of some text within some other text.";  // untranslated\nBlockly.Msg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated\nBlockly.Msg["TEXT_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated\nBlockly.Msg["TEXT_REVERSE_TOOLTIP"] = "Reverses the order of the characters in the text.";  // untranslated\nBlockly.Msg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";  // untranslated\nBlockly.Msg["TEXT_TEXT_TOOLTIP"] = "A letter, word, or line of text.";  // untranslated\nBlockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated\nBlockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "trim spaces from both sides of";  // untranslated\nBlockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "trim spaces from left side of";  // untranslated\nBlockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "trim spaces from right side of";  // untranslated\nBlockly.Msg["TEXT_TRIM_TOOLTIP"] = "Return a copy of the text with spaces removed from one or both ends.";  // untranslated\nBlockly.Msg["TODAY"] = "Денес";\nBlockly.Msg["UNDO"] = "Undo";  // untranslated\nBlockly.Msg["VARIABLES_DEFAULT_NAME"] = "елемент";\nBlockly.Msg["VARIABLES_GET_CREATE_SET"] = "Create \'set %1\'";  // untranslated\nBlockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated\nBlockly.Msg["VARIABLES_GET_TOOLTIP"] = "Returns the value of this variable.";  // untranslated\nBlockly.Msg["VARIABLES_SET"] = "set %1 to %2";  // untranslated\nBlockly.Msg["VARIABLES_SET_CREATE_GET"] = "Create \'get %1\'";  // untranslated\nBlockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated\nBlockly.Msg["VARIABLES_SET_TOOLTIP"] = "Sets this variable to be equal to the input.";  // untranslated\nBlockly.Msg["VARIABLE_ALREADY_EXISTS"] = "A variable named \'%1\' already exists.";  // untranslated\nBlockly.Msg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "A variable named \'%1\' already exists for another type: \'%2\'.";  // untranslated\nBlockly.Msg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Say something...";  // untranslated\nBlockly.Msg["CONTROLS_FOREACH_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];\nBlockly.Msg["CONTROLS_FOR_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];\nBlockly.Msg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"];\nBlockly.Msg["CONTROLS_IF_ELSE_TITLE_ELSE"] = Blockly.Msg["CONTROLS_IF_MSG_ELSE"];\nBlockly.Msg["CONTROLS_IF_IF_TITLE_IF"] = Blockly.Msg["CONTROLS_IF_MSG_IF"];\nBlockly.Msg["CONTROLS_IF_MSG_THEN"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];\nBlockly.Msg["CONTROLS_WHILEUNTIL_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];\nBlockly.Msg["LISTS_CREATE_WITH_ITEM_TITLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];\nBlockly.Msg["LISTS_GET_INDEX_HELPURL"] = Blockly.Msg["LISTS_INDEX_OF_HELPURL"];\nBlockly.Msg["LISTS_GET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];\nBlockly.Msg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];\nBlockly.Msg["LISTS_INDEX_OF_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];\nBlockly.Msg["LISTS_SET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];\nBlockly.Msg["MATH_CHANGE_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];\nBlockly.Msg["PROCEDURES_DEFRETURN_COMMENT"] = Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"];\nBlockly.Msg["PROCEDURES_DEFRETURN_DO"] = Blockly.Msg["PROCEDURES_DEFNORETURN_DO"];\nBlockly.Msg["PROCEDURES_DEFRETURN_PROCEDURE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"];\nBlockly.Msg["PROCEDURES_DEFRETURN_TITLE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"];\nBlockly.Msg["TEXT_APPEND_VARIABLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];\nBlockly.Msg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];\n\nBlockly.Msg["MATH_HUE"] = "230";\nBlockly.Msg["LOOPS_HUE"] = "120";\nBlockly.Msg["LISTS_HUE"] = "260";\nBlockly.Msg["LOGIC_HUE"] = "210";\nBlockly.Msg["VARIABLES_HUE"] = "330";\nBlockly.Msg["TEXTS_HUE"] = "160";\nBlockly.Msg["PROCEDURES_HUE"] = "290";\nBlockly.Msg["COLOUR_HUE"] = "20";\nBlockly.Msg["VARIABLES_DYNAMIC_HUE"] = "310";return Blockly.Msg;}\n\n//# sourceURL=webpack:///./node_modules/node-blockly/lib/i18n/mk.js?')}}]);